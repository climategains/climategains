--
-- Project-defined tables
-- (Includes constraints, except that foreign key constraints are in 3-fkey-constraints.sql, 
-- allowing to use alphabetic table ordering in this file here.)

/*  To adapt tables, it is best to alter them in Supabase, and reflect the changes 
    in code here. If you need to see a table definition for <tablename>, use this command:

    pg_dump -h db.uvjqnxkfzenbljxcutbx.supabase.co -p 5432 -d postgres -U postgres \
        -t public.<tablename> --schema-only --no-comments | sed -e '/^--/d' | sed -e '/^$/N;/^\n$/D'

    However, if there is a need to empty the table space to recreate the whole schema, use:
    (Best done this "tabula rasa" way to not have to deal with dependent objects. Remember to 
    also re-create the table's dependent views, foreign key constraints, triggers and privileges.)

DROP TABLE IF EXISTS 
    public.medium,
    public.profile,
    public.programme_response,
    public.programme_step,
    public.project,
    public.role,
    public.response,
    public.step
    CASCADE;
*/


--
-- backing
--

CREATE TABLE public.backing (
    id bigint NOT NULL,
    created timestamp with time zone DEFAULT now(),
    project_id bigint NOT NULL,
    backer uuid NOT NULL,
    backing_type text NOT NULL,
    funding_amount numeric,
    funding_currency text,
    support_type text,
    support_description text,
    returns_type text NOT NULL,
    returns_amount numeric,
    returns_description text
);

ALTER TABLE public.backing OWNER TO postgres;

ALTER TABLE public.backing ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.backing
    ADD CONSTRAINT backing_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.backing
    ADD CONSTRAINT backing_backer_fkey FOREIGN KEY (backer) 
        REFERENCES public.profile(id) ON DELETE RESTRICT;

ALTER TABLE ONLY public.backing 
    ADD CONSTRAINT backing_project_id_fkey FOREIGN KEY (project_id) 
        REFERENCES public.project(id) ON DELETE CASCADE;

ALTER TABLE public.backing ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.backing TO anon;
GRANT ALL ON TABLE public.backing TO authenticated;
GRANT ALL ON TABLE public.backing TO service_role;

GRANT ALL ON SEQUENCE public.backing_id_seq TO anon;
GRANT ALL ON SEQUENCE public.backing_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.backing_id_seq TO service_role;

COMMENT ON TABLE public.backing IS 'Backings are instances of support for a project, together with '
    'a definition what the backer should receive in return according to the contractual agreement '
    'made. This is different from the later actual transactions of returns, which are recorded in '
    'another table.';
COMMENT ON COLUMN public.backing.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.backing.created IS 'Creation date and time of this database record. If not '
    'provided, set to the current time for inserts.';
COMMENT ON COLUMN public.backing.project_id IS 'Project (see project.id) supported by this backing.';
COMMENT ON COLUMN public.backing.backer IS 'Entity (see profile.id) providing the backing. Can be '
    'a person or, if profile.organization is filled, an organization represented by that person.';
COMMENT ON COLUMN public.backing.backing_type IS E'The type of backing provided, based on what '
    'type of contribution is made and what type of returns are expected. One of:\n'
    '\n'
    '  • "philantropy": Backer provides a financial contribution and gets non-financial returns.\n'
    '  • "prepurchase": Backer provides a financial contribution and gets a fixed amount ITMO transfer in '
         'return.\n'
    '  • "investment": Backer provides a financial contribution and gets a percentage of the issued '
         'ITMO transfer amount in return. \n'
    '  • "support": Backer provides an in-kind contribution and gets in-kind returns. Validators '
         'who review projects are an example of backing by support, but not the only one.\n'
    '\n'
    'Technically, this column is redundant because its value can be deduced from which of the '
    'funding_*, support_* and returns_* fields are filled. However, it allows to aggregate backings '
    'comfortably by type, and helps the database maintain data consistency by limiting which of the '
    'other fields can be filled after selecting the backing type.';
COMMENT ON COLUMN public.backing.funding_amount IS 'Financial contribution amount of the backing.';
COMMENT ON COLUMN public.backing.funding_currency IS 'Currency used for the funding amount '
    '(see column funding_amount). Must be an ISO 4217 three-letter currency code such as "EUR", '
    '"GBP", "USD". See: https://en.wikipedia.org/wiki/ISO_4217';;
COMMENT ON COLUMN public.backing.support_type IS 'A tag describing the category to which this '
    'non-financial backing belongs. While a more detailed description is also possible (see '
    'support_description), this make the support provided at least partially understandable to the '
    'computer, which is important for aggregation in reporting statistics etc..';
COMMENT ON COLUMN public.backing.support_description IS 'Natural language definition of what this '
    'non-financial backing consists of.';
COMMENT ON COLUMN public.backing.returns_type IS 'Type of returns or repayment that, according to '
    'the agreement made, should be provided to the backer if the project is successful. One of:\n'
    '  • "nothing": Backer agreed to receive no returns, so the returns_* fields must be NULL.\n'
    '  • "itmo_transfer": Backer will receive an ITMO transfer of a fixed amount.\n'
    '  • "itmo_share": Backer will receive the revenue from the sale of the given percentage of the '
         'ITMO amount issued in this project. As ITMOs are issued over a longer time, the backer '
         'will receive multiple payouts.\n'
    '  • "in_kind": Backer will receive a non-financial, in-kind return as described. This can be '
         'impacts for specific groups, for example.';
COMMENT ON COLUMN public.backing.returns_amount IS 'If returns_type is "itmo_transfer", this records '
    'the amount of the ITMO transfer, with the usual implied unit "tons avoided of CO₂-equivalent '
    'greenhouse gas emissions" (tCO₂eq). If returns_type is "itmo_share", this records which '
    'percentage of the ITMOs issued in the project will be sold to provide the financial return from '
    'their sales revenue to the backer. The value is in percentage points from 0-100. In all other '
    'cases, this field must be NULL.';
COMMENT ON COLUMN public.backing.returns_description IS 'A natural language definition of the '
    'in-kind returns that the backer should receive according to the agreement.';


--
-- benefit
--

CREATE TABLE public.benefit (
    id bigint NOT NULL,
    project_id bigint NOT NULL,
    beneficiary uuid,
    external_beneficiary text,
    description text,
    status text DEFAULT 'pending'::text NOT NULL,
    evidence bigint,
    created timestamp with time zone DEFAULT now()
);

ALTER TABLE public.benefit OWNER TO postgres;

ALTER TABLE public.benefit ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.benefit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1                                                                                                                  
);                                                                                                                           
                                                                                                                             
ALTER TABLE ONLY public.benefit                                                                                              
    ADD CONSTRAINT benefit_pkey PRIMARY KEY (id);                                                                            

ALTER TABLE public.benefit ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.benefit TO anon;
GRANT ALL ON TABLE public.benefit TO authenticated;
GRANT ALL ON TABLE public.benefit TO service_role;

GRANT ALL ON SEQUENCE public.benefit_id_seq TO anon;
GRANT ALL ON SEQUENCE public.benefit_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.benefit_id_seq TO service_role;

COMMENT ON TABLE public.benefit IS 'Benefits of projects for specific persons or groups, beyond '
    'the reduction of GHG emissions that benefit everyone globally. Records must not overlap: '
    'the same real-world benefit must not be the content of several overlapping entries, such as '
    'one more generic and several more specific entries. Only with this requirement, benefits can '
    'be aggregated properly for reporting and statistics. If necessary, replace a more generic '
    'record with several more specific ones while a project is underway.';
COMMENT ON COLUMN public.benefit.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.benefit.project_id IS 'ID (see project.id) of the project to which this '
    'benefit belongs.';
COMMENT ON COLUMN public.benefit.beneficiary_id IS 'UUID of the user who is subject of this role '
    'record. References profile.id, which in turn references auth.users.id. May be NULL, in which '
    'case field external_beneficiary has to be filled.';
COMMENT ON COLUMN public.benefit.external_beneficiary IS 'Plain text definition of a beneficiary '
    'that is a group, or a person without a user account. Must be NULL if beneficiary_id is filled.';
COMMENT ON COLUMN public.benefit.description IS 'Plain text definition of the benefit itself.';
    -- "Description" always refers to a natural language definition in this database's nomenclature, 
    -- while "spec" or "specification" always refers to a formal, computer understandable 
    -- version of the whole description, and "type" refers to a formal, computer understandable 
    -- version of only the gist of the description so that at least reporting statistics are possible.
COMMENT ON COLUMN public.benefit.status IS 'Implementation status of the benefit. Possible values '
    'are only: "pending", "delivered", "rejected".';
COMMENT ON COLUMN public.benefit.evidence IS 'ID (see medium.id) of the video provided as evidence '
    'for the current benefit status (see field status). Status "pending" does not need evidence.';
COMMENT ON COLUMN public.benefit.created IS 'Creation date and time of this database record. If not '
    'provided, set to the current time for inserts.';


-- 
-- benefit_type
--

CREATE TABLE public.benefit_type (
    benefit_id bigint NOT NULL,
    tag_id text NOT NULL
);

ALTER TABLE public.benefit_type OWNER TO postgres;

ALTER TABLE ONLY public.benefit_type
    ADD CONSTRAINT benefit_type_pkey PRIMARY KEY (benefit_id, tag_id);

ALTER TABLE public.benefit_type ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.benefit_type TO anon;
GRANT ALL ON TABLE public.benefit_type TO authenticated;
GRANT ALL ON TABLE public.benefit_type TO service_role;

COMMENT ON TABLE public.benefit_type IS 'Computer understandable categorization of project benefits. '
    'One project benefit may be categorized with several benefit types, for example as contributing '
    'to several UN Sustainable Development Goals.';
COMMENT ON COLUMN public.benefit_type.benefit_id IS 'The project benefit to categorize.';
COMMENT ON COLUMN public.benefit_type.tag_id IS 'The category this benefit falls under, as a '
    'reference to a dynamically created tag (see tag.id).';


--
-- emissions_avoided
-- 

CREATE TABLE public.emissions_avoided (
    id bigint NOT NULL,
    project_id bigint,
    period_start date,
    period_end date,
    emissions_avoided_per_day real,
    comment text,
    created timestamp with time zone DEFAULT now()
);

ALTER TABLE public.emissions_avoided OWNER TO postgres;

ALTER TABLE public.emissions_avoided ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.emissions_avoided_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.emissions_avoided
    ADD CONSTRAINT emissions_avoided_pkey PRIMARY KEY (id);

ALTER TABLE public.emissions_avoided ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.emissions_avoided TO anon;
GRANT ALL ON TABLE public.emissions_avoided TO authenticated;
GRANT ALL ON TABLE public.emissions_avoided TO service_role;

GRANT ALL ON SEQUENCE public.emissions_avoided_id_seq TO anon;
GRANT ALL ON SEQUENCE public.emissions_avoided_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.emissions_avoided_id_seq TO service_role;

COMMENT ON TABLE public.emissions_avoided IS 'GHG emission impacts during a project''s operative '
    'period. Can include maintenance periods with reduced impacts. Any period not covered by records '
    'in this table is assumed to have no impact on GHG emissions, that is, the same as the situation '
    'before the implementation of the project.';
COMMENT ON COLUMN public.emissions_avoided.id IS ''
    'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.emissions_avoided.project_id IS 'ID (see project.id) of the project to '
    'which this emission record is associated.';
COMMENT ON COLUMN public.emissions_avoided.period_start IS 'First day of the period for which the '
    'emissions impact recorded here is valid. Use the date from the local timezone timestamp at the '
    'project location.';
COMMENT ON COLUMN public.emissions_avoided.period_end IS 'Last day of the period for which the '
    'emissions impact recorded here is valid. Use the date from the local timezone timestamp at the '
    'project location.';
COMMENT ON COLUMN public.emissions_avoided.emissions_avoided_per_day IS 'GHG emissions impact of a '
    'single day of the period reported in this record. Use positive numbers to express a reduction '
    'of emissions compared to the situation before project implementation. Unit is kg of CO₂ '
    'equivalent GHG emissions.';
COMMENT ON COLUMN public.emissions_avoided.comment IS 'Free-text Explanation of the emissions '
    'record. For example, explain that the project was in maintenance mode to repair specific pieces '
    'of equipment';
COMMENT ON COLUMN public.emissions_avoided.created IS 'Creation date and time of this database '
    'record. If not provided, set to the current time for inserts.';


--
-- medium
--

CREATE TABLE public.medium (
    id bigint NOT NULL,
    mimetype text,
    name text,
    extension text,
    created timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    url text,
    caption text,
    programme_id bigint,
    project_id bigint,
    programme_step_id bigint,
    role text,
    creator uuid,
    object_id uuid
);

ALTER TABLE public.medium OWNER TO postgres;
REVOKE ALL ON TABLE public.medium FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.medium TO anon, authenticated, service_role;

ALTER TABLE public.medium ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.medium_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.medium_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.medium_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.medium ADD CONSTRAINT medium_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.medium IS 
    'File uploads, except for video responses which go into table response. Files are stored in an '
    'external S3 compatible object storage system. Read-accessible with just the anon API key, no '
    'account needed.';
COMMENT ON COLUMN public.medium.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.medium.mimetype IS E''
    'Media type (formerly called "MIME type") of the file. Should be a value from the official '
    'standard: https://www.iana.org/assignments/media-types/media-types.xhtml . In practice, only '
    'images and videos will be used here, so one of the following values should be used (considers '
    'Android encoder support and how MIME types are designated there):'
    '\n\n'
    '  • image/png \n'
    '  • image/jpg \n'
    '  • image/jpeg \n'
    '  • video/H263 \n'
    '  • video/H264 \n'
    '  • video/VP8 \n'
    '  • video/3gpp (.3gp files. Container format for H.263 and H.264.) \n'
    '  • video/mp4 (.mp4 files. Container format for H.263, H.264, H.265.) \n'
    '  • video/x-matroska (.mkv files. Container format for any video codec.) \n'
    '  • video/webm (.webm files. Container format for VP8.)';
COMMENT ON COLUMN public.medium.name IS 'File basename of the file, as uploaded. Not including any '
    'directory names or the filename extension.';
COMMENT ON COLUMN public.medium.extension IS 'Extension of the filename, as uploaded. For example '
    'jpg or mp4. Not including a "." (dot).';
COMMENT ON COLUMN public.medium.created IS 'File upload time.  If not provided, set to the current '
    'time for inserts.';
COMMENT ON COLUMN public.medium.url IS E'Public URL for file access. All files are read-only '
    'accessible via such public URLs. This URL is usually auto-generated based on the assigned '
    'object ID, so does not have to be provided when uploading.'
    '\n\n'
    'However, as a special case (useful for testing etc.) this also allows table rows describing an '
    'externally hosted file, by providing an external URL and no object_id value.';
COMMENT ON COLUMN public.medium.caption IS 'Image or video caption to show alongside the medium on '
    'display.';
COMMENT ON COLUMN public.medium.programme_id IS 'ID (see programme.id) of the programme to which '
    'the file is associated. One and only one of programme_id, project_id or programme_step_id must '
    'be set, the others must be NULL.';
COMMENT ON COLUMN public.medium.project_id IS 'ID (see project.id) of the project to which the file '
    'is associated. One and only one of programme_id, project_id or programme_step_id must be set, '
    'the others must be NULL.';
COMMENT ON COLUMN public.medium.programme_step_id IS 'ID (see programme_step.id) of the programme '
    'step to which the file is associated. One and only one of programme_id, project_id or '
    'programme_step_id must be set, the others must be NULL.';
COMMENT ON COLUMN public.medium.role IS E'In what capacity or function the file should be displayed '
    'in the associated programme, project or step.'
    '\n\n'
    'Currently must be one of: \n'
    '  • video \n'
    '  • gallery_picture \n'
    '  • poster \n';
COMMENT ON COLUMN public.medium.creator IS 'User ID (see profile.id) of the user who has uploaded '
    'the file.';
COMMENT ON COLUMN public.medium.object_id IS 'S3 object ID of the file. References '
    'storage.objects.id, a column in an internal table of the Supabase-generated storage system.';


--
-- profile
--

CREATE TABLE public.profile (
    id uuid NOT NULL,
    fullname text NOT NULL,
    organization text,
    ui_language text DEFAULT '''en'''::text,
    contact jsonb,
    billing_address jsonb,
    payment_accounts jsonb,
    carbon_registry_id text,
    carbon_registry_link text,
);

ALTER TABLE public.profile OWNER TO postgres;
REVOKE ALL ON TABLE public.profile FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.profile TO anon, authenticated, service_role;

ALTER TABLE ONLY public.profile ADD CONSTRAINT profile_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.profile 
    ADD CONSTRAINT profile_carbon_registry_id_key UNIQUE (carbon_registry_id);
ALTER TABLE ONLY public.profile 
    ADD CONSTRAINT profile_carbon_registry_link_key UNIQUE (carbon_registry_link);

COMMENT ON TABLE public.profile IS 'Profile information of Climate Gains API users. Associated 1:1 '
    'with the Supabase provided table auth.users, and providing extended information for it.';
COMMENT ON COLUMN public.profile.id IS 'Database-internal ID. Must be provided for inserts as '
    'a value referencing auth.users.id, a column in a Supabase provided internal table.';
COMMENT ON COLUMN public.profile.fullname IS 'Full user name, in "firstname middlenames lastname" '
    'format.';
COMMENT ON COLUMN public.profile.organization IS 'Name of the organization (if any) that deployed '
    'the user to work in a Climate Gains programme.';
COMMENT ON COLUMN public.profile.ui_language IS 'User’s preferred user interface language. Must be a '
    'two-letter language code according to ISO 639-1. See: '
    'https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes';
COMMENT ON COLUMN public.profile.contact IS E'Contact options to contact the user or organization '
    'represented by this profile. Useful for example to have additional information to contact '
    'investors in case the profile’s e-mail address does not work for some reason. Data must conform '
    'to https://schema.org/Organization or https://schema.org/Person , though only a basic subset '
    'will be evaluated in client applications. Client applications are only required to evaluate '
    'the following properties:'
    '\n\n'
    '  • Organization.name / Person.name \n'
    '  • Organization.url / Person.url (official website, optional) \n'
    '  • Organization.address / Person.address (optional) \n'
    '  • Organization.contactPoint / Person.workLocation \n'
    '\n\n'
    'The latter two are of type https://schema.org/ContactPoint , used for all other contact '
    'options. Only the following subset of its properties needs to be evaluated by client '
    'applications:'
    '\n\n'
    '  • name (contact point name, e.g. "Company WhatsApp number") \n'
    '  • description \n'
    '  • contactType (freetext value, e.g. "support (WhatsApp)") \n'
    '  • telephone \n'
    '  • email \n'
    '  • hoursAvailable \n'
    '  • identifier (for non-standard contact options such as WhatsApp) \n'
    '  • url (if an external URL, even if with a custom protocol prefix, is available that '
        'corresponds to the contact option; provide "identifier" as well where possible) \n'
    '  • sameAs (for social media profile links, according to widespread practice; also in case '
        'several URLs have to be stored, such as a call link and a profile link for a Skype handle) \n'
    '\n\n'
    'For the recommended way to encode WhatsApp, Facebook Messenger etc. contact options, see '
    'https://stackoverflow.com/a/75437791 and for social media links see '
    'https://stackoverflow.com/a/27376493. Multiple ContactPoint values per property are possible, '
    'as always with schema.org definitions.';
COMMENT ON COLUMN public.profile.billing_address IS E'Address for sending an invoice or request for '
    'payment to backers who financially contribute to a project. Data must be a single value of '
    'https://schema.org/PostalAddress . Only a basic subset of its field will be evaluated in client '
    'applications. Client applications are only required to evaluate the following properties:'
    '\n\n'
    '  • PostalAddress.addressCountry \n'
    '  • PostalAddress.addressLocality \n'
    '  • PostalAddress.addressRegion (optional) \n'
    '  • PostalAddress.postalCode \n'
    '  • PostalAddress.streetAddress \n'
    '  • PostalAddress.availableLanguage (optional, assume English as default)\n'
    '  • PostalAddress.email (optional, for invoice / payment note delivery)\n';
COMMENT ON COLUMN public.profile.payment_accounts IS E'Payment information how this user wants to '
    'receive the funding associated with project steps, or with their financial returns from an '
    'investment into a project. One payment account per array element.'
    '\n\n'
    'A JSON array, whose elements must conform to https://schema.googleapis.com/Account (sadly, no '
    'equivalent is available yet in schema.org properties). Many different types of accounts (bank '
    'account, MPesa, PayPal, cash transfer services etc.) can be described.';
COMMENT ON COLUMN public.profile.carbon_registry_id IS 'ID of the profile entity used for ITMO '
    'accounting, both in this database and in the external UN Carbon Registry application. Optional, '
    'only needed for project backers that want to receive ITMO transfers for their involvement.';
COMMENT ON COLUMN public.profile.carbon_registry_id IS 'Link to a profile in the UN Carbon Registry '
    'that represents the same entity as this profile. Optional, only needed for project backers that '
    'want to receive ITMO transfers for their involvement.';

--
-- programme
--

CREATE TABLE public.programme (
    id bigint NOT NULL,
    name text NOT NULL,
    created timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
    country_code text,
    location_name text,
    funding_source text NOT NULL,
    emissions_avoided bigint,
    active boolean DEFAULT true NOT NULL
);

ALTER TABLE public.programme OWNER TO postgres;
REVOKE ALL ON TABLE public.programme FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.programme TO anon, authenticated, service_role;

ALTER TABLE public.programme ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.programme_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.programme_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.programme_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.programme ADD CONSTRAINT programmes_name_key UNIQUE (name);

ALTER TABLE ONLY public.programme ADD CONSTRAINT programmes_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.programme IS 'Funding programmes, with one to many projects each. Read-'
    'accessible with just the anon API key, no account needed.';
COMMENT ON COLUMN public.programme.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.programme.name IS 'Programme name. Enforced to be unique within the API’s '
    'database.';
COMMENT ON COLUMN public.programme.created IS 'Creation date and time of the programme’s database '
    'record. If not provided, set to the current time for inserts.';
COMMENT ON COLUMN public.programme.updated IS 'Date and time of the programme database record’s '
    'last update. If not provided, set to the current time for inserts.';
COMMENT ON COLUMN public.programme.country_code IS 'Two-letter ("alpha-2") country code of the '
    'country to which the programme applies. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 . '
    'Each programme is valid in exactly one country only.';
COMMENT ON COLUMN public.programme.location_name IS 'Name of the location in which the programme '
    'applies. Omit (leave NULL) to apply the programme to the whole of the country. Any value is '
    'understood to refer to the first search result of OpenStreetMap Nominatim (see '
    'https://nominatim.openstreetmap.org/ ), allowing to show an embedded map with the corresponding '
    'boundaries.';
COMMENT ON COLUMN public.programme.funding_source IS 'Name of the organization or person financing '
    'this programme.';
COMMENT ON COLUMN public.programme.emissions_avoided IS 'Estimated greenhouse gas (GHG) emissions '
    'avoided by each project of this programme, over the estimated full lifetime of the solution '
    'implemented by the project. Unit is kg of CO₂ equivalent GHG emissions. This estimate does not '
    'consider that projects may differ from each other in small ways. If changed, the new value is '
    'retroactively applied to all existing projects as well.';
COMMENT ON COLUMN public.programme.active IS 'Programme status; use "false" for draft or completed '
    'programmes. Do not use "false" to replace a programme with an updated version. This column is '
    'not a version management mechanism, as there is no way to navigate from a replaced programme '
    'to its replacement, or vice versa. Instead of replacing a programme, replace the steps inside '
    'it that you want to update.';


--
-- programme_response
--

CREATE TABLE public.programme_response (
    id bigint NOT NULL,
    programme_step_id bigint NOT NULL,
    "order" smallint NOT NULL,
    prompt text NOT NULL,
    active boolean DEFAULT true NOT NULL
);

ALTER TABLE public.programme_response OWNER TO postgres;
REVOKE ALL ON TABLE public.programme_response FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.programme_response TO anon, authenticated, service_role;

ALTER TABLE public.programme_response ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.programme_response_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.programme_response_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.programme_response_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.programme_response ADD CONSTRAINT programme_response_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.programme_response IS 'Programme-level metadata about the (video) responses '
    'created during the implementation of a project. Read-accessible with just the anon API key, no '
    'account needed.';
COMMENT ON COLUMN public.programme_response.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.programme_response.programme_step_id IS E'Programme step associated with '
    'this programme response. Several programme responses can be associated with the same programme '
    'step.'
    '\n\n'
    'A similar association holds for the implementation data: several responses can be associated '
    'with the same step, but this is transitively so because each step is associated with one '
    'programme step, and each response with one programme response.';
COMMENT ON COLUMN public.programme_response."order" IS E'Relative order of this record, relative to '
    'the programme response records that belong to the same programme step (see programme_step_id).'
    '\n\n'
    'When adding a new response, the recommended practice is to use a value 128 larger than for the '
    'previous response, to support inserting  responses in between later at the half-way point '
    'between two order values.';
COMMENT ON COLUMN public.programme_response.prompt IS 'Prompt to be answered by a project’s '
    'associated video response. Should generally be a full sentence and end in a question mark.';
COMMENT ON COLUMN public.programme_response.active IS E'If this programme response record should be '
    'considered when recording new responses in a project. If false, it may still be used by existing '
    'responses.'
    '\n\n'
    'This allows for simple version management: you can replace a programme response with a new '
    'version (needed only if the meaning changes significantly) by using the same order value and '
    'setting the old one’s active column to "false".';


--
-- programme_step
--

CREATE TABLE public.programme_step (
    id bigint NOT NULL,
    programme_id bigint NOT NULL,
    "order" smallint,
    name text NOT NULL,
    description text,
    funding_amount numeric DEFAULT '0'::numeric NOT NULL,
    worktime numeric,
    risks text[],
    supplies text[],
    suppliers jsonb[],
    active boolean DEFAULT true NOT NULL,
    funding_currency text NOT NULL,
    support jsonb
);

ALTER TABLE public.programme_step OWNER TO postgres;
REVOKE ALL ON TABLE public.programme_step FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.programme_step TO anon, authenticated, service_role;

ALTER TABLE public.programme_step ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.programme_step_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.programme_step_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.programme_step_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.programme_step ADD CONSTRAINT programme_step_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.programme_step IS 'Programme-level metadata about the steps of a project’s '
    'implementation. Read-accessible with just the anon API key, no account needed.';
COMMENT ON COLUMN public.programme_step.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.programme_step.programme_id IS 'Programme to which this programme step '
    'belongs. Each programme can have any number of programme steps.';
COMMENT ON COLUMN public.programme_step."order" IS E'Relative order of this record, relative to the '
    'programme step records that belong to the same programme (see programme_id).'
    '\n\n'
    'When adding a new step, the recommended practice is to use a value 128 larger than for the '
    'previous response, to support inserting steps in between later at the half-way point between '
    'two order values.';
COMMENT ON COLUMN public.programme_step.name IS 'Name of this programme step. For example, '
    '"Application", "Baseline Situation", "Stove Installation". Should use title case.';
COMMENT ON COLUMN public.programme_step.description IS 'Plain text description of what this '
    'programme step is about.';
COMMENT ON COLUMN public.programme_step.funding_amount IS 'Use together with column funding_currency.';
COMMENT ON COLUMN public.programme_step.worktime IS 'Estimate of the number of hours that will be '
    'required to execute this step, incl. reporting via the Climate Gains app.';
COMMENT ON COLUMN public.programme_step.risks IS E'Risks and challenges associated with executing '
    'this step in any one project.'
    '\n\n'
    'One risk per array element. Each array element should be suitable for display as a list item '
    '(starting with lowercase, max. half a sentence long).';
COMMENT ON COLUMN public.programme_step.supplies IS E'Supplies needed to execute this step in any '
    'one project.'
    '\n\n'
    'One supply item per array element. Each array element should be suitable for display as a list '
    'item (starting with lowercase, max. half a sentence long).';
COMMENT ON COLUMN public.programme_step.suppliers IS E'Businesses that are approved suppliers of the '
    'supplied needed for the execution of this step.'
    '\n\n'
    'One supplier per array element. Data must conform to https://schema.org/LocalBusiness , though '
    'only a basic subset will be used in client applications. For the supported subset regarding '
    'contact information, see on column "programme_step.support".';
COMMENT ON COLUMN public.programme_step.active IS E'If this programme step should be considered '
    'when showing the remaining steps to existing and new projects.\n'
    '\n\n'
    'This allows for simple version management: you can replace a programme step with a new version '
    '(needed only if the meaning changes significantly) by using the same order value and setting '
    'the old one’s active column to "false".';
COMMENT ON COLUMN public.programme_step.funding_currency IS 'Currency used for the funding amount '
    '(see column funding_amount). Must be an ISO 4217 three-letter currency code such as "EUR", '
    '"GBP", "USD". See: https://en.wikipedia.org/wiki/ISO_4217';
COMMENT ON COLUMN public.programme_step.support IS E'Contact point for technical support for the '
    'execution of this step in a project.'
    '\n\n'
    'Data must conform to https://schema.org/Organization or https://schema.org/Person , though '
    'only a basic subset will be evaluated in client applications. Client applications are only '
    'required to evaluate the following properties:'
    '\n\n'
    '  • Organization.name / Person.name \n'
    '  • Organization.url / Person.url (official website, optional) \n'
    '  • Organization.address / Person.address (optional) \n'
    '  • Organization.contactPoint / Person.workLocation \n'
    '\n\n'
    'The latter two are of type https://schema.org/ContactPoint , used for all other contact '
    'options. Only the following subset of its properties needs to be evaluated by client '
    'applications:'
    '\n\n'
    '  • name (contact point name, e.g. "Company WhatsApp number") \n'
    '  • description \n'
    '  • contactType (freetext value, e.g. "support (WhatsApp)") \n'
    '  • telephone \n'
    '  • email \n'
    '  • hoursAvailable \n'
    '  • identifier (for non-standard contact options such as WhatsApp) \n'
    '  • url (if an external URL, even if with a custom protocol prefix, is available that '
        'corresponds to the contact option; provide "identifier" as well where possible) \n'
    '  • sameAs (for social media profile links, according to widespread practice; also in case '
        'several URLs have to be stored, such as a call link and a profile link for a Skype handle) \n'
    '\n\n'
    'For the recommended way to encode WhatsApp, Facebook Messenger etc. contact options, see '
    'https://stackoverflow.com/a/75437791 and for social media links see '
    'https://stackoverflow.com/a/27376493. Multiple ContactPoint values per property are possible, '
    'as always with schema.org definitions.';


--
-- project
--

CREATE TABLE public.project (
    id bigint NOT NULL,
    programme_id bigint NOT NULL,
    name text NOT NULL,
    created timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    geo_lat double precision,
    geo_long double precision,
    location_name text
);

ALTER TABLE public.project OWNER TO postgres;
REVOKE ALL ON TABLE public.project FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.project TO anon, authenticated, service_role;

DROP SEQUENCE IF EXISTS public.project_id_seq;
ALTER TABLE public.project ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
        SEQUENCE NAME public.project_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );
REVOKE ALL ON SEQUENCE public.project_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.project_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.project ADD CONSTRAINT project_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.project IS 'A project is an instance of a programme, that is, one "run" or '
    'execution at a specific place and time with a specific project team. Each project has several '
    'steps, each step has several responses. Read-accessible with just the anon API key, no account '
    'needed.';
COMMENT ON COLUMN public.project.id IS 'Database-internal ID, also used as a real-world "project ID" '
    'identifier. Auto-generated for inserts, and cannot be updated. If you really need to set your '
    'own value, such as when importing from a database backup, use syntax "INSERT INTO … OVERRIDING '
    'SYSTEM VALUE VALUES ….';
COMMENT ON COLUMN public.project.programme_id IS 'Programme implemented by this project.';
COMMENT ON COLUMN public.project.name IS 'Name of this project. Often set to an auto-generated '
    'value based on the programme name and the project’s location.';
COMMENT ON COLUMN public.project.created IS 'Date and time when this project has been created. If '
    'not provided, set to the current time for inserts.';
COMMENT ON COLUMN public.project.updated IS 'Date and time when this project has been last updated. '
    'If not provided, set to the current time for inserts.';
COMMENT ON COLUMN public.project.geo_lat IS 'Latitude of this project’s geolocation. If the '
    'project does not have a point-like geolocation (for example, a village or town), use the '
    'approximate centerpoint of the project area instead. This is meant to show a reference to this '
    'project on maps, not to direct visitors.';
COMMENT ON COLUMN public.project.geo_long IS 'Longitude of this project’s geolocation. If the '
    'project does not have a point-like geolocation (for example, a village or town), use the '
    'approximate centerpoint of the project area instead. This is meant to show a reference to this '
    'project on maps, not to direct visitors.';
COMMENT ON COLUMN public.project.location_name IS E'Name of the location at which the project is '
    'executed. Used to show the outline of the area in which the project is executed. Supply only '
    'if the project does not have a point-like geolocation (for example, if it applies to a whole '
    'village or town). Omit if the project has a point-like geolocation (house, farm etc.), as in '
    'that case the name of any containing georeferences can be determined automatically.'
    '\n\n'
    'Any value is understood to refer to the first search result of OpenStreetMap Nominatim (see '
    'https://nominatim.openstreetmap.org/ ), allowing to show an embedded map with the corresponding'
    ' boundaries.';


--
-- response
--

CREATE TABLE public.response (
    id bigint NOT NULL,
    object_id uuid,
    created timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    creator uuid NOT NULL,
    geo_lat double precision,
    geo_long double precision,
    url text,
    mimetype text DEFAULT 'video/*'::text,
    programme_response_id bigint NOT NULL,
    step_id bigint NOT NULL
);

ALTER TABLE public.response OWNER TO postgres;
REVOKE ALL ON TABLE public.response FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.response TO anon, authenticated, service_role;

ALTER TABLE public.response ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.response_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.response_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.response_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.response ADD CONSTRAINT response_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.response IS E''
    'A response, in video format, to a prompt defined in a programme response record.'
    '\n\n'
    'Each project has several steps (see table "step"), each step has several responses. Each '
    'response belongs to one project, and each project to one programme.'
    '\n\n'
    'Read-accessible with just the anon API key, no account needed. Response records are not '
    'supposed to be updated. If a response is not validated, a new response can be submitted for '
    'validation.';
COMMENT ON COLUMN public.response.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.response.object_id IS 'Reference to the video object representing the '
    'content of this response. References storage.objects.id, a column in an internal table of the '
    'Supabase-generated storage system.';
COMMENT ON COLUMN public.response.created IS 'Date and time when this response record has been '
    'created. If not provided, set to the current time for inserts.';
COMMENT ON COLUMN public.response.creator IS 'User ID of the user submitting the response. '
    'Different responses may be submitted by different users, even for responses that belong to '
    'the same step.';
COMMENT ON COLUMN public.response.geo_lat IS 'Geolocation latitude of the response’s video, '
    'extracted from its metadata.';
COMMENT ON COLUMN public.response.geo_long IS 'Geolocation longitude of the response’s video, '
    'extracted from its metadata.';
COMMENT ON COLUMN public.response.url IS E'Public URL for file access. All files are read-only '
    'accessible via such public URLs. This URL is usually auto-generated based on the assigned '
    'object ID, so does not have to be provided when uploading.'
    '\n\n'
    'However, as a special case (useful for testing etc.) this also allows records describing an '
    'externally hosted file, by providing an external URL and no object_id value.';
COMMENT ON COLUMN public.response.mimetype IS E'Media type (formerly called "MIME type") of the '
    'file. Should be a value from the official standard: '
    'https://www.iana.org/assignments/media-types/media-types.xhtml . In practice, only videos will '
    'be used here, so one of the following values should be used (considers Android encoder support '
    'and how MIME types are designated there):'
    '\n\n'
    '  • video/mp4 (.mp4 files. Container format for H.263, H.264, H.265.) \n'
    '  • video/3gpp (.3gp files. Container format for H.263 and H.264.) \n'
    '  • video/webm (.webm files. Container format for VP8.) \n'
    '  • video/x-matroska (.mkv files. Container format for any video codec.) \n'
    '  • video/H263 (H.263 media format, no own file extension) \n'
    '  • video/H264 (MPEG-4 Visual media format, no own file extension) \n'
    '  • video/VP8 (Vorbis media format, no own file extension)'
    '\n\n'
    'Later, image formats may also be allowed, but not yet:'
    '\n\n'
    '  • image/png \n'
    '  • image/jpg \n'
    '  • image/jpeg \n';
COMMENT ON COLUMN public.response.programme_response_id IS 'Reference to the associated programme '
    'response record. Contains programme-level metadata associated with this response, among other '
    'things including the prompt to display when collecting this response.';
COMMENT ON COLUMN public.response.step_id IS 'Project step associated with this response. Find out '
    'the response’s associated project via this association.';


--
-- role
--

CREATE TABLE public.role (
    programme_id bigint,
    project_id bigint,
    user_id uuid NOT NULL,
    id bigint NOT NULL,
    activist_application boolean,
    manager_application boolean,
    validator_application boolean,
    activist boolean,
    manager boolean,
    validator boolean
);

ALTER TABLE public.role OWNER TO postgres;
REVOKE ALL ON TABLE public.role FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.role TO anon, authenticated, service_role;

ALTER TABLE public.role ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.role_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.role_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.role_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.role ADD CONSTRAINT role_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.role IS 'User permission records. One column per role and role application '
    'due to Supabase good practices (see https://noteshub.net/tLUW3ojVyImd ).';
COMMENT ON COLUMN public.role.programme_id IS 'Programme ID if this ACL entry relates to a '
    'programme. NULL otherwise. Either programme_id or project_id must be set.';
COMMENT ON COLUMN public.role.project_id IS 'Programme ID if this ACL entry relates to a project. '
    'NULL otherwise. Either programme_id or project_id must be set.';
COMMENT ON COLUMN public.role.user_id IS 'UUID of the user who is subject of this role record.';
COMMENT ON COLUMN public.role.id IS 'Database-internal ID. Auto-generated for inserts.';
    -- A surrogate primary key was necessary as the SQL standard forbids NULL in primary key values. 
    -- A composite primary key (programme_id, project_id, user_id, role) would have needed NULL 
    -- values due to the polymorphic relation modeled there.
COMMENT ON COLUMN public.role.activist_application IS 'If the user applied for the activist role to '
    'the project or programme.';
COMMENT ON COLUMN public.role.manager_application IS 'If the user applied for the manager role to '
    'the project or programme.';
COMMENT ON COLUMN public.role.validator_application IS 'If the user applied for the validator role '
    'to the project or programme.';
COMMENT ON COLUMN public.role.activist IS E'If the user has been approved (true) or disapproved '
    '(false, preventing further applications) for the activist role in this project or programme.'
    '\n\n'
    'In a project, this role gives general team collaborator access, allowing to submit steps and '
    'responses. In a programme, this gives no additional permissions, it’s just possible for '
    'symmetry.';
COMMENT ON COLUMN public.role.manager IS E'If the user has been approved (true) or disapproved '
    '(false, preventing further applications) for the manager role in this project or programme.'
    '\n\n'
    'In a project, this role allows to edit project metadata and to approve applying activists. In '
    'a programme, this allows full user management in the programme and all its projects (incl. of '
    'validators), and to edit payment information of its projects.';
COMMENT ON COLUMN public.role.validator IS E'If the user has been approved (true) or disapproved '
    '(false, preventing further applications) for the validator role in this project or programme.'
    '\n\n'
    'In a project, this role allows to validate project steps. In a programme, this allows to '
    'validate project steps in all projects of the programme.';


--
-- step
--

CREATE TABLE public.step (
    id bigint NOT NULL,
    project_id bigint NOT NULL,
    programme_step_id bigint NOT NULL,
    submitted timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    validation_updated timestamp with time zone,
    validation_status text,
    validation_comment text,
    paid timestamp with time zone,
    payment_comment text,
    submitter uuid NOT NULL,
    validator uuid,
    paid_by uuid
);

ALTER TABLE public.step OWNER TO postgres;
REVOKE ALL ON TABLE public.step FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON TABLE public.step TO anon, authenticated, service_role;

ALTER TABLE public.step ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.steps_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
REVOKE ALL ON SEQUENCE public.steps_id_seq FROM PUBLIC, anon, authenticated, service_role;
GRANT  ALL ON SEQUENCE public.steps_id_seq TO anon, authenticated, service_role;

ALTER TABLE ONLY public.step ADD CONSTRAINT step_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.step IS E'Each record contains execution related information about one step '
    'in a project’s execution. Each project has several steps, each step has several responses.'
    '\n\n'
    'Read-accessible with just the anon API key, no account needed.';
COMMENT ON COLUMN public.step.id IS 'Database-internal ID. Auto-generated for inserts.';
COMMENT ON COLUMN public.step.project_id IS 'Project to which this step belongs. Also allows to '
    'find out the  programme with which this step is associated. (Another way to find this out is '
    'via column programme_step_id.)';
COMMENT ON COLUMN public.step.programme_step_id IS 'Programme step record that serves as the '
    'template for this step, also providing relevant meta information. Among that is the programme '
    'with which this step is associated. (Another way to find this out is via column project_id.)';
COMMENT ON COLUMN public.step.submitted IS 'Timestamp when this step has been submitted by the '
    'activist for approval. No edits are possible by the activist after that.';
COMMENT ON COLUMN public.step.validation_updated IS 'Timestamp when this step’s validation status '
    'has been last updated, if any.';
COMMENT ON COLUMN public.step.validation_status IS 'Current validation status of this step. One of '
    '"validateable", "validated", "rejected". NULL is equivalent to "validateable". Status '
    '"validated" or "rejected" will not change anymore. Rather, in status "rejected", the next step '
    'would be a resubmission with fixed data (i.e. creating a new step record).';
COMMENT ON COLUMN public.step.validation_comment IS 'Optional comment by the validator on the last '
    'validation status change. Can detail the reasons for rejecting to validate a step.';
COMMENT ON COLUMN public.step.paid IS 'Timestamp when the funding associated with the successful '
    'validation of this step has been paid (see programme_step.funding_amount). NULL if no payment '
    'has been sent yet.';
COMMENT ON COLUMN public.step.payment_comment IS 'Optional comment by the user who made the '
    'payment, detailing any relevant details that should be relayed to the project’s team. For '
    'example, the choice of payment channel in case there were several options.';
COMMENT ON COLUMN public.step.submitter IS 'UUID of the user who submitted (created) this record.';
COMMENT ON COLUMN public.step.validator IS 'UUID of the user who made the most recent change to '
    'column validation_status.';
COMMENT ON COLUMN public.step.paid_by IS 'UUID of the user who paid out the funding associated '
    'with the successful validation of this step.';


---
--- tag
---

CREATE TABLE public.tag (
    id text NOT NULL,
    title text NOT NULL,
    subtitle text,
    description text
);

ALTER TABLE public.tag OWNER TO postgres;

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);

ALTER TABLE public.tag ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.tag TO anon;
GRANT ALL ON TABLE public.tag TO authenticated;
GRANT ALL ON TABLE public.tag TO service_role;

COMMENT ON TABLE public.tag IS 'Tags are categories or named entities of any sort, intended for use '
    'as values in other database fields. Usage examples: public.benefit.support_type and '
    'public.benefit_type.tag_id. The latter uses tags for all UN Sustainable Development Goals, for '
    'example.';
    -- Developer note: compared to using pure string values together with CHECK constraints, this 
    -- tag scheme allows to create more values dynamically (or at least, with ease) and allows 
    -- additional attributes, which a single string does not allow.
COMMENT ON COLUMN public.tag.id IS 'Identifying name of this tag. Must consist of only lowercase '
    'letters and underscores. Applications may generate it from tag.title automatically.';
    -- Developer note: Having this separate from the UI visible tag.title field allows to 
    -- have identical values in tag.title if needed, as it can happen when storing several ranges of 
    -- values in one table like here. And using a textual ID improves readability of the raw 
    -- database tables.
COMMENT ON COLUMN public.tag.title IS 'The title of the tag, providing a natural language definition.';
COMMENT ON COLUMN public.tag.subtitle IS 'An explanatory subtitle of the tag. Optional, but if set, '
    'applications are required to show it in their UI. For example, tag.title may be "SDG 13" and '
    'tag.subtitle would then be "Climate Action".';
COMMENT ON COLUMN public.tag.description IS 'A longer, natural language definition of what the '
    'entity represented by the tag actually is.';
